generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id          String @id @default(uuid())
  code_bar    String @unique
  description String
  price       Float
  quantity    Int

  @@map("products")
}

model User {
  id            String    @id @default(uuid())
  email         String
  name          String
  cpf           String
  birthDate     DateTime
  phone         String
  avatarUrl     String?
  password      String
  isActive      Boolean   @default(false)
  isBlocked     Boolean   @default(false)
  refreshToken  String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  institutionId String?
  license       License[]

  @@index([isActive], type: Hash)
  @@index([role], type: Hash)
}

model License {
  id         String    @id @default(uuid())
  code       String    @unique
  contractId String
  userId     String?
  userRole   String?
  assignedAt DateTime?
  isUsed     Boolean   @default(false)
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user     User?    @relation(fields: [userId], references: [id])
  contract Contract @relation(fields: [contractId], references: [id], onDelete: Cascade)
}

model Contract {
  id            String   @id @default(uuid())
  filename      String
  priority      String?
  fileUrl       String?
  institutionId String
  usersLimit    Int
  startsAt      DateTime
  expiresIn     DateTime
  isEnded       Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  license License[]
}
